New AWS Ubuntu 20 instance:

sudo apt update
sudo apt upgrade

sudo apt install python3.8-venv
sudo python3 -m venv myenv

INSTALL API 

source myenv/bin/activate
pip install django
pip install djangorestframework
pip install django-cors-headers
pip install beautifulsoup4
pip install django-clearcache

(not sure if python3-lxml was necessary)
sudo apt-get install python3-lxml 
pip install lxml
        - In case of failure in Windows try downloading precompiled package from
        - https://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml
        - For Python version 3.10, Windows AMD 64 select 
        - lxml‑4.6.3‑cp310‑cp310‑win_amd64.whl
        - pip install c:\path\to\download\lxml‑4.6.3‑cp310‑cp310‑win_amd64.whl

RUN API

(chmod 600 id rsa)
git@github.com:jukkamic/sarjis.git
mkdir sarjis/api/images

(migrate and syncdb may be necessary)
python manage.py migrate --run-syncdb

python manage.py runserver 0.0.0.0:8000
OR
python manage.py runserver 0.0.0.0:8000 > /dev/null 2>&1 &

INSTALL UI

sudo apt install nodejs
sudo apt install npm

npm install

- In case install did not work run the following commands

        sudo npm install -g @angular/cli
        (warnings of compatibility issues between versions of node and angular)
        sudo apt update
        npm cache clean -f

        sudo npm install -g n
        sudo n stable

        sudo npm install -g @angular-devkit/build-angular

(check prod paths in environment.prod)
ng build

APACHE

sudo apt-get install apache2

sudo mkdir /var/www/sarjis
sudo ln -s /home/ubuntu/sarjis/ui/dist/ui/* /var/www/sarjis/

enable mod rewrite. 

sarjis.conf:

<VirtualHost *:80>
        ServerName sarjis.kotkis.fi
        ServerAlias kotkis.fi
        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/sarjis/

        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined

        <Directory "/var/www/sarjis/">
                RewriteEngine On
        # If an existing asset or directory is requested go to it as it is
                RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]
                RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d
                RewriteRule ^ - [L]

        # If the requested resource doesn't exist, use index.html
                RewriteRule ^ /index.html
        </Directory>
</VirtualHost>

cd /etc/apache2/sites-enabled
sudo ln -s ../sites-available/sarjis.conf .

NGINX & UWSGI

copy serverconfig/nginx/sarjis-api.conf to /etc/nginx/services-available
then symlink to services-enabled
copy sarjis_uwsgi.ini to /etc/uwsgi/vassals
// sudo /usr/local/bin/uwsgi --emperor /etc/uwsgi/vassals --uid ubuntu --gid ubuntu --daemonize /var/log/uwsgi-emperor.log

NOTE
        journalctl -xe
        Unable to negotiate with 141.98.10.60 port 50578: no matching key exchange method found. Their offer: diffie-hellman-group14-sha1,diffie-hellman-group-ex>

        Add following into ~/.ssh/config

Host 141.98.10.60
    KexAlgorithms +diffie-hellman-group14-sha1




