# sarjis-api.conf

# the upstream component nginx needs to connect to
upstream sarjis {
    server unix:///opt/sarjis/sarjis.sock; # for a file socket
    # server localhost:8000; # for a web port socket (we'll use this first)
}

# configuration of the server
server {
    # the port your site will be served on
    # the domain name it will serve for
    server_name sarjis.kotkis.fi sarjis.kotkis.com;
    charset     utf-8;

    # max upload size
    client_max_body_size 2M;   # adjust to taste

    root /opt/sarjis/ui/dist/ui/;

    location / {
        try_files $uri $uri/ ./index.html;
    }

    location ~ ^/sarjis {
	try_files $uri $uri/ /index.html;
    }

    # Django media
    location /images  {
        alias /opt/sarjis/api/images;  # your Django project's media files - amend as required
    }

#    location /static {
#        alias /path/to/your/mysite/static; # your Django project's static files - amend as required
#    }

    # Finally, send all non-media requests to the Django server.
    location /api {
        uwsgi_pass  sarjis;
        include     /opt/sarjis/uwsgi_params; # the uwsgi_params file you installed
    }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/sarjis.kotkis.fi/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/sarjis.kotkis.fi/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}

server {
    if ($host = sarjis.kotkis.fi) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = sarjis.kotkis.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen      80;
    server_name sarjis.kotkis.fi sarjis.kotkis.com;
    return 404; # managed by Certbot




}
